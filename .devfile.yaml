schemaVersion: 2.2.0
metadata:
  name: quarkus-awesome
components:
  - name: tooling-container
    container:
      env:
        - name: KUBEDOCK_ENABLED
          value: 'true'
        - name: DOCKER_HOST
          value: 'tcp://127.0.0.1:2475'
        - name: TESTCONTAINERS_RYUK_DISABLED
          value: 'true'
        - name: TESTCONTAINERS_CHECKS_DISABLE
          value: 'true'
      image: quay.io/devfile/universal-developer-image:latest
      memoryRequest: 2Gi
      memoryLimit: 8Gi
      cpuRequest: 1000m
      cpuLimit: 4000m
      endpoints:
        - exposure: none
          name: kubedock
          protocol: tcp
          targetPort: 2475      
commands:
  - id: test
    exec:
      label: '1. Run tests'
      component: tooling-container
      commandLine: export SDKMAN_DIR="$HOME/.sdkman" && source "$HOME/.sdkman/bin/sdkman-init.sh" && mvn test
  - id: logs
    exec:
      label: '2. Retrieve logs of testcontainers containers (kubedock)'
      component: tooling-container
      commandLine: while [[ ! $(kubectl logs -lkubedock=true) ]]; do echo "waiting..."; sleep 2; done; kubectl logs -lkubedock=true -f
  - id: pods
    exec:
      label: '3. Watch pods'
      component: tooling-container
      commandLine: kubectl get pods -w
  - id: run
    exec:
      label: '4. Quarkus Dev'
      component: tooling-container
      commandLine: export SDKMAN_DIR="$HOME/.sdkman" && source "$HOME/.sdkman/bin/sdkman-init.sh" && mvn quarkus:dev
# - id: podman-run
#   exec:
#     label: '2. Podman Run Sample'
#     component: tooling-container
#     commandLine: podman run --name httpd -d -p 8080:8080 python python -m http.server 8080
